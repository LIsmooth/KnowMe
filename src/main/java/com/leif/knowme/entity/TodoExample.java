package com.leif.knowme.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TodoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    public TodoExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTodoIdIsNull() {
            addCriterion("todo_id is null");
            return (Criteria) this;
        }

        public Criteria andTodoIdIsNotNull() {
            addCriterion("todo_id is not null");
            return (Criteria) this;
        }

        public Criteria andTodoIdEqualTo(String value) {
            addCriterion("todo_id =", value, "todoId");
            return (Criteria) this;
        }

        public Criteria andTodoIdNotEqualTo(String value) {
            addCriterion("todo_id <>", value, "todoId");
            return (Criteria) this;
        }

        public Criteria andTodoIdGreaterThan(String value) {
            addCriterion("todo_id >", value, "todoId");
            return (Criteria) this;
        }

        public Criteria andTodoIdGreaterThanOrEqualTo(String value) {
            addCriterion("todo_id >=", value, "todoId");
            return (Criteria) this;
        }

        public Criteria andTodoIdLessThan(String value) {
            addCriterion("todo_id <", value, "todoId");
            return (Criteria) this;
        }

        public Criteria andTodoIdLessThanOrEqualTo(String value) {
            addCriterion("todo_id <=", value, "todoId");
            return (Criteria) this;
        }

        public Criteria andTodoIdLike(String value) {
            addCriterion("todo_id like", value, "todoId");
            return (Criteria) this;
        }

        public Criteria andTodoIdNotLike(String value) {
            addCriterion("todo_id not like", value, "todoId");
            return (Criteria) this;
        }

        public Criteria andTodoIdIn(List<String> values) {
            addCriterion("todo_id in", values, "todoId");
            return (Criteria) this;
        }

        public Criteria andTodoIdNotIn(List<String> values) {
            addCriterion("todo_id not in", values, "todoId");
            return (Criteria) this;
        }

        public Criteria andTodoIdBetween(String value1, String value2) {
            addCriterion("todo_id between", value1, value2, "todoId");
            return (Criteria) this;
        }

        public Criteria andTodoIdNotBetween(String value1, String value2) {
            addCriterion("todo_id not between", value1, value2, "todoId");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNull() {
            addCriterion("account_id is null");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNotNull() {
            addCriterion("account_id is not null");
            return (Criteria) this;
        }

        public Criteria andAccountIdEqualTo(String value) {
            addCriterion("account_id =", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotEqualTo(String value) {
            addCriterion("account_id <>", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThan(String value) {
            addCriterion("account_id >", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThanOrEqualTo(String value) {
            addCriterion("account_id >=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThan(String value) {
            addCriterion("account_id <", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThanOrEqualTo(String value) {
            addCriterion("account_id <=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLike(String value) {
            addCriterion("account_id like", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotLike(String value) {
            addCriterion("account_id not like", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdIn(List<String> values) {
            addCriterion("account_id in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotIn(List<String> values) {
            addCriterion("account_id not in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdBetween(String value1, String value2) {
            addCriterion("account_id between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotBetween(String value1, String value2) {
            addCriterion("account_id not between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("`type` is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("`type` is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Byte value) {
            addCriterion("`type` =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Byte value) {
            addCriterion("`type` <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Byte value) {
            addCriterion("`type` >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("`type` >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Byte value) {
            addCriterion("`type` <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Byte value) {
            addCriterion("`type` <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Byte> values) {
            addCriterion("`type` in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Byte> values) {
            addCriterion("`type` not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Byte value1, Byte value2) {
            addCriterion("`type` between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("`type` not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedIsNull() {
            addCriterion("plan_consumed is null");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedIsNotNull() {
            addCriterion("plan_consumed is not null");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedEqualTo(Integer value) {
            addCriterion("plan_consumed =", value, "planConsumed");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedNotEqualTo(Integer value) {
            addCriterion("plan_consumed <>", value, "planConsumed");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedGreaterThan(Integer value) {
            addCriterion("plan_consumed >", value, "planConsumed");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedGreaterThanOrEqualTo(Integer value) {
            addCriterion("plan_consumed >=", value, "planConsumed");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedLessThan(Integer value) {
            addCriterion("plan_consumed <", value, "planConsumed");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedLessThanOrEqualTo(Integer value) {
            addCriterion("plan_consumed <=", value, "planConsumed");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedIn(List<Integer> values) {
            addCriterion("plan_consumed in", values, "planConsumed");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedNotIn(List<Integer> values) {
            addCriterion("plan_consumed not in", values, "planConsumed");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedBetween(Integer value1, Integer value2) {
            addCriterion("plan_consumed between", value1, value2, "planConsumed");
            return (Criteria) this;
        }

        public Criteria andPlanConsumedNotBetween(Integer value1, Integer value2) {
            addCriterion("plan_consumed not between", value1, value2, "planConsumed");
            return (Criteria) this;
        }

        public Criteria andEventMsgIsNull() {
            addCriterion("event_msg is null");
            return (Criteria) this;
        }

        public Criteria andEventMsgIsNotNull() {
            addCriterion("event_msg is not null");
            return (Criteria) this;
        }

        public Criteria andEventMsgEqualTo(String value) {
            addCriterion("event_msg =", value, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andEventMsgNotEqualTo(String value) {
            addCriterion("event_msg <>", value, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andEventMsgGreaterThan(String value) {
            addCriterion("event_msg >", value, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andEventMsgGreaterThanOrEqualTo(String value) {
            addCriterion("event_msg >=", value, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andEventMsgLessThan(String value) {
            addCriterion("event_msg <", value, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andEventMsgLessThanOrEqualTo(String value) {
            addCriterion("event_msg <=", value, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andEventMsgLike(String value) {
            addCriterion("event_msg like", value, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andEventMsgNotLike(String value) {
            addCriterion("event_msg not like", value, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andEventMsgIn(List<String> values) {
            addCriterion("event_msg in", values, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andEventMsgNotIn(List<String> values) {
            addCriterion("event_msg not in", values, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andEventMsgBetween(String value1, String value2) {
            addCriterion("event_msg between", value1, value2, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andEventMsgNotBetween(String value1, String value2) {
            addCriterion("event_msg not between", value1, value2, "eventMsg");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("created is null");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("created is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("created =", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("created <>", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("created >", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("created >=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("created <", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("created <=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("created in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("created not in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("created between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("created not between", value1, value2, "created");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_todo
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_todo
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}